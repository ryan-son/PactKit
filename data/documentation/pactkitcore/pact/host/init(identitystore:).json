{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identityStore"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","text":"SecureKeyStoring","preciseIdentifier":"s:11PactKitCore16SecureKeyStoringP","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/SecureKeyStoring"},{"kind":"text","text":" = KeychainStore()) "},{"kind":"keyword","text":"throws"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"identityStore","content":[{"type":"paragraph","inlineContent":[{"text":"The secure store to use for persisting the Host’s identity key.","type":"text"},{"text":" ","type":"text"},{"text":"Defaults to a standard ","type":"text"},{"code":"KeychainStore","type":"codeVoice"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This initializer will attempt to load an existing identity from the provided key store.","type":"text"},{"text":" ","type":"text"},{"text":"If no identity is found, a new one will be created and saved automatically to the store.","type":"text"},{"text":" ","type":"text"},{"text":"It is recommended to initialize this object on a background thread to avoid blocking the main thread,","type":"text"},{"text":" ","type":"text"},{"text":"as keychain access can be slow.","type":"text"}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":"Pact.Error","type":"codeVoice"},{"text":" if keychain operations fail or if loaded key data is corrupted.","type":"text"}]}],"name":"Throws","style":"note"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/pactkitcore\/pact\/host\/init(identitystore:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Initializes a new Host instance."}],"metadata":{"externalID":"s:11PactKitCore0A0O4HostC13identityStoreAeA16SecureKeyStoring_p_tKcfc","symbolKind":"init","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"identityStore"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:11PactKitCore16SecureKeyStoringP","kind":"typeIdentifier","text":"SecureKeyStoring"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"init(identityStore:)","modules":[{"name":"PactKitCore"}],"role":"symbol","roleHeading":"Initializer"},"hierarchy":{"paths":[["doc:\/\/PactKitCore\/documentation\/PactKitCore","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Host"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Host\/init(identityStore:)"},"references":{"doc://PactKitCore/documentation/PactKitCore/Pact/Host/init(identityStore:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Host\/init(identityStore:)","url":"\/documentation\/pactkitcore\/pact\/host\/init(identitystore:)","type":"topic","abstract":[{"text":"Initializes a new Host instance.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identityStore","kind":"externalParam"},{"text":": any ","kind":"text"},{"preciseIdentifier":"s:11PactKitCore16SecureKeyStoringP","text":"SecureKeyStoring","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"init(identityStore:)"},"doc://PactKitCore/documentation/PactKitCore/Pact":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pact"}],"role":"symbol","url":"\/documentation\/pactkitcore\/pact","abstract":[{"type":"text","text":"A namespace for the PactKit framework, providing an entry point for all functionalities."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Pact"}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact","title":"Pact"},"doc://PactKitCore/documentation/PactKitCore/Pact/Host":{"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Host","kind":"identifier"}],"navigatorTitle":[{"text":"Host","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Host","type":"topic","title":"Pact.Host","abstract":[{"type":"text","text":"The central object that represents the trusted party (the “Host”) in a secure communication setup."}],"url":"\/documentation\/pactkitcore\/pact\/host"},"doc://PactKitCore/documentation/PactKitCore":{"abstract":[],"title":"PactKitCore","kind":"symbol","role":"collection","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore","type":"topic","url":"\/documentation\/pactkitcore"},"doc://PactKitCore/documentation/PactKitCore/SecureKeyStoring":{"title":"SecureKeyStoring","kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SecureKeyStoring","kind":"identifier"}],"navigatorTitle":[{"text":"SecureKeyStoring","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"An interface for securely storing, loading, and deleting key data."}],"url":"\/documentation\/pactkitcore\/securekeystoring","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/SecureKeyStoring"}}}