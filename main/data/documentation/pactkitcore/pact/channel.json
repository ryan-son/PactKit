{"sections":[],"kind":"symbol","identifier":{"url":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/pactkitcore\/pact\/channel"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/PactKitCore\/documentation\/PactKitCore","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact"]]},"abstract":[{"type":"text","text":"A secure communication channel established after a successful handshake."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This object holds the symmetric session key and handles encryption and decryption for a single session."},{"type":"text","text":" "},{"type":"text","text":"You obtain a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" object from a successful call to "},{"code":"Pact.Host.establishChannel(with:)","type":"codeVoice"},{"type":"text","text":"."}]},{"anchor":"Usage-Example","type":"heading","text":"Usage Example","level":2},{"type":"codeListing","code":["do {","  let (channel, response) = try host.establishChannel(with: counterpartKey)","  \/\/ Send the response back to the counterpart...","","  let secretMessage = \"This is a secret!\"","  let encryptedData = try channel.encrypt(message: secretMessage)","","  \/\/ Send encryptedData over the network...","","  let receivedData: Data = \/\/ ... from counterpart","  let decryptedMessage = try channel.decrypt(encryptedData: receivedData)","","  print(decryptedMessage) \/\/ \"This is a secret from the other side!\"","} catch {","  print(\"Error during secure communication: \\(error)\")","}"],"syntax":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"topicSections":[{"title":"Instance Methods","generated":true,"identifiers":["doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/decrypt(encryptedData:)","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/encrypt(message:)"],"anchor":"Instance-Methods"}],"metadata":{"externalID":"s:11PactKitCore0A0O7ChannelC","title":"Pact.Channel","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"}],"navigatorTitle":[{"text":"Channel","kind":"identifier"}],"roleHeading":"Class","extendedModule":"PactKitCore","role":"symbol","symbolKind":"class","modules":[{"name":"PactKitCore"}]},"references":{"doc://PactKitCore/documentation/PactKitCore/Pact/Channel/encrypt(message:)":{"type":"topic","title":"encrypt(message:)","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/encrypt(message:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encrypt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"}],"url":"\/documentation\/pactkitcore\/pact\/channel\/encrypt(message:)","kind":"symbol","abstract":[{"text":"Encrypts a plaintext string using AES-GCM with the session key.","type":"text"}]},"doc://PactKitCore/documentation/PactKitCore":{"kind":"symbol","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore","type":"topic","title":"PactKitCore","role":"collection","url":"\/documentation\/pactkitcore","abstract":[]},"doc://PactKitCore/documentation/PactKitCore/Pact":{"navigatorTitle":[{"kind":"identifier","text":"Pact"}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact","role":"symbol","url":"\/documentation\/pactkitcore\/pact","type":"topic","abstract":[{"text":"A namespace for the PactKit framework, providing an entry point for all functionalities.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pact"}],"kind":"symbol","title":"Pact"},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel/decrypt(encryptedData:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"encryptedData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/decrypt(encryptedData:)","title":"decrypt(encryptedData:)","role":"symbol","abstract":[{"type":"text","text":"Decrypts data encrypted with the session key."}],"kind":"symbol","type":"topic","url":"\/documentation\/pactkitcore\/pact\/channel\/decrypt(encrypteddata:)"},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel":{"kind":"symbol","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel","role":"symbol","url":"\/documentation\/pactkitcore\/pact\/channel","title":"Pact.Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"abstract":[{"text":"A secure communication channel established after a successful handshake.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}]}}}