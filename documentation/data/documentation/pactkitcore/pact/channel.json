{"kind":"symbol","variants":[{"paths":["\/documentation\/pactkitcore\/pact\/channel"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"A secure communication channel established after a successful handshake.","type":"text"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"externalID":"s:11PactKitCore0A0O7ChannelC","extendedModule":"PactKitCore","modules":[{"name":"PactKitCore"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"symbolKind":"class","role":"symbol","roleHeading":"Class","title":"Pact.Channel"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel"},"hierarchy":{"paths":[["doc:\/\/PactKitCore\/documentation\/PactKitCore","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact"]]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"}],"platforms":["macOS"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"This object holds the symmetric session key and handles encryption and decryption for a single session.","type":"text"},{"text":" ","type":"text"},{"text":"You obtain a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" object from a successful call to ","type":"text"},{"code":"Pact.Host.establishChannel(with:)","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"heading","level":2,"text":"Usage Example","anchor":"Usage-Example"},{"type":"codeListing","syntax":"swift","code":["do {","  let (channel, response) = try host.establishChannel(with: counterpartKey)","  \/\/ Send the response back to the counterpart...","","  let secretMessage = \"This is a secret!\"","  let encryptedData = try channel.encrypt(message: secretMessage)","","  \/\/ Send encryptedData over the network...","","  let receivedData: Data = \/\/ ... from counterpart","  let decryptedMessage = try channel.decrypt(encryptedData: receivedData)","","  print(decryptedMessage) \/\/ \"This is a secret from the other side!\"","} catch {","  print(\"Error during secure communication: \\(error)\")","}"]}]}],"topicSections":[{"identifiers":["doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/decrypt(encryptedData:)","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/encrypt(message:)"],"generated":true,"title":"Instance Methods","anchor":"Instance-Methods"}],"references":{"doc://PactKitCore/documentation/PactKitCore/Pact/Channel/decrypt(encryptedData:)":{"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/decrypt(encryptedData:)","title":"decrypt(encryptedData:)","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/pactkitcore\/pact\/channel\/decrypt(encrypteddata:)","abstract":[{"text":"Decrypts data encrypted with the session key.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"decrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"encryptedData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel/encrypt(message:)":{"abstract":[{"type":"text","text":"Encrypts a plaintext string using AES-GCM with the session key."}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/encrypt(message:)","kind":"symbol","role":"symbol","url":"\/documentation\/pactkitcore\/pact\/channel\/encrypt(message:)","type":"topic","title":"encrypt(message:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"}]},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel":{"abstract":[{"text":"A secure communication channel established after a successful handshake.","type":"text"}],"url":"\/documentation\/pactkitcore\/pact\/channel","title":"Pact.Channel","navigatorTitle":[{"text":"Channel","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel","kind":"symbol","type":"topic","role":"symbol"},"doc://PactKitCore/documentation/PactKitCore":{"title":"PactKitCore","abstract":[],"kind":"symbol","url":"\/documentation\/pactkitcore","role":"collection","type":"topic","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore"},"doc://PactKitCore/documentation/PactKitCore/Pact":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pact","kind":"identifier"}],"abstract":[{"type":"text","text":"A namespace for the PactKit framework, providing an entry point for all functionalities."}],"type":"topic","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact","title":"Pact","url":"\/documentation\/pactkitcore\/pact","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Pact","kind":"identifier"}]}}}