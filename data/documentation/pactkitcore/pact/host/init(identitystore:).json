{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Host\/init(identityStore:)"},"abstract":[{"type":"text","text":"Initializes a new Host instance."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/pactkitcore\/pact\/host\/init(identitystore:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"identityStore","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"SecureKeyStoring","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/SecureKeyStoring","preciseIdentifier":"s:11PactKitCore16SecureKeyStoringP","kind":"typeIdentifier"},{"text":" = KeychainStore()) ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["macOS"],"languages":["swift"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The secure store to use for persisting the Host’s identity key.","type":"text"},{"text":" ","type":"text"},{"text":"Defaults to a standard ","type":"text"},{"code":"KeychainStore","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"identityStore"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This initializer will attempt to load an existing identity from the provided key store."},{"type":"text","text":" "},{"type":"text","text":"If no identity is found, a new one will be created and saved automatically to the store."},{"type":"text","text":" "},{"type":"text","text":"It is recommended to initialize this object on a background thread to avoid blocking the main thread,"},{"type":"text","text":" "},{"type":"text","text":"as keychain access can be slow."}]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"Pact.Error"},{"type":"text","text":" if keychain operations fail or if loaded key data is corrupted."}]}],"style":"note","name":"Throws"}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/PactKitCore\/documentation\/PactKitCore","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Host"]]},"metadata":{"externalID":"s:11PactKitCore0A0O4HostC13identityStoreAeA16SecureKeyStoring_p_tKcfc","roleHeading":"Initializer","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identityStore","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"SecureKeyStoring","preciseIdentifier":"s:11PactKitCore16SecureKeyStoringP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"init","role":"symbol","modules":[{"name":"PactKitCore"}],"title":"init(identityStore:)"},"kind":"symbol","references":{"doc://PactKitCore/documentation/PactKitCore/SecureKeyStoring":{"url":"\/documentation\/pactkitcore\/securekeystoring","abstract":[{"text":"An interface for securely storing, loading, and deleting key data.","type":"text"}],"title":"SecureKeyStoring","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecureKeyStoring"}],"navigatorTitle":[{"kind":"identifier","text":"SecureKeyStoring"}],"kind":"symbol","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/SecureKeyStoring","type":"topic","role":"symbol"},"doc://PactKitCore/documentation/PactKitCore":{"title":"PactKitCore","abstract":[],"kind":"symbol","url":"\/documentation\/pactkitcore","role":"collection","type":"topic","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore"},"doc://PactKitCore/documentation/PactKitCore/Pact/Host/init(identityStore:)":{"abstract":[{"text":"Initializes a new Host instance.","type":"text"}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Host\/init(identityStore:)","title":"init(identityStore:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"identityStore","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"SecureKeyStoring","preciseIdentifier":"s:11PactKitCore16SecureKeyStoringP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/pactkitcore\/pact\/host\/init(identitystore:)","role":"symbol","kind":"symbol","type":"topic"},"doc://PactKitCore/documentation/PactKitCore/Pact/Host":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Host"}],"kind":"symbol","abstract":[{"text":"The central object that represents the trusted party (the “Host”) in a secure communication setup.","type":"text"}],"url":"\/documentation\/pactkitcore\/pact\/host","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Host","navigatorTitle":[{"kind":"identifier","text":"Host"}],"title":"Pact.Host","type":"topic","role":"symbol"},"doc://PactKitCore/documentation/PactKitCore/Pact":{"kind":"symbol","navigatorTitle":[{"text":"Pact","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pact","kind":"identifier"}],"role":"symbol","url":"\/documentation\/pactkitcore\/pact","title":"Pact","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact","abstract":[{"text":"A namespace for the PactKit framework, providing an entry point for all functionalities.","type":"text"}]}}}