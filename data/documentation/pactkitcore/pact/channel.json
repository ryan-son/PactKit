{"identifier":{"url":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel","interfaceLanguage":"swift"},"sections":[],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"externalID":"s:11PactKitCore0A0O7ChannelC","title":"Pact.Channel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"symbolKind":"class","role":"symbol","roleHeading":"Class","modules":[{"name":"PactKitCore"}],"extendedModule":"PactKitCore"},"abstract":[{"type":"text","text":"A secure communication channel established after a successful handshake."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/PactKitCore\/documentation\/PactKitCore","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact"]]},"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"This object holds the symmetric session key and handles encryption and decryption for a single session.","type":"text"},{"text":" ","type":"text"},{"text":"You obtain a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" object from a successful call to ","type":"text"},{"code":"Pact.Host.establishChannel(with:)","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"text":"Usage Example","type":"heading","anchor":"Usage-Example"},{"code":["do {","  let (channel, response) = try host.establishChannel(with: counterpartKey)","  \/\/ Send the response back to the counterpart...","","  let secretMessage = \"This is a secret!\"","  let encryptedData = try channel.encrypt(message: secretMessage)","","  \/\/ Send encryptedData over the network...","","  let receivedData: Data = \/\/ ... from counterpart","  let decryptedMessage = try channel.decrypt(encryptedData: receivedData)","","  print(decryptedMessage) \/\/ \"This is a secret from the other side!\"","} catch {","  print(\"Error during secure communication: \\(error)\")","}"],"type":"codeListing","syntax":"swift"}]}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/decrypt(encryptedData:)","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/encrypt(message:)"],"generated":true,"anchor":"Instance-Methods"}],"variants":[{"paths":["\/documentation\/pactkitcore\/pact\/channel"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","references":{"doc://PactKitCore/documentation/PactKitCore/Pact/Channel/encrypt(message:)":{"kind":"symbol","url":"\/documentation\/pactkitcore\/pact\/channel\/encrypt(message:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"}],"abstract":[{"type":"text","text":"Encrypts a plaintext string using AES-GCM with the session key."}],"role":"symbol","title":"encrypt(message:)","type":"topic","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/encrypt(message:)"},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel/decrypt(encryptedData:)":{"type":"topic","role":"symbol","kind":"symbol","title":"decrypt(encryptedData:)","abstract":[{"type":"text","text":"Decrypts data encrypted with the session key."}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/decrypt(encryptedData:)","url":"\/documentation\/pactkitcore\/pact\/channel\/decrypt(encrypteddata:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"encryptedData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}]},"doc://PactKitCore/documentation/PactKitCore":{"abstract":[],"title":"PactKitCore","url":"\/documentation\/pactkitcore","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore","type":"topic","kind":"symbol","role":"collection"},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel":{"abstract":[{"type":"text","text":"A secure communication channel established after a successful handshake."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"type":"topic","url":"\/documentation\/pactkitcore\/pact\/channel","kind":"symbol","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Pact.Channel"},"doc://PactKitCore/documentation/PactKitCore/Pact":{"url":"\/documentation\/pactkitcore\/pact","kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact","abstract":[{"text":"A namespace for the PactKit framework, providing an entry point for all functionalities.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pact"}],"title":"Pact","navigatorTitle":[{"kind":"identifier","text":"Pact"}]}}}