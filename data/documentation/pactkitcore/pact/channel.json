{"abstract":[{"text":"A secure communication channel established after a successful handshake.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"This object holds the symmetric session key and handles encryption and decryption for a single session."},{"type":"text","text":" "},{"type":"text","text":"You obtain a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" object from a successful call to "},{"code":"Pact.Host.establishChannel(with:)","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Usage Example","level":2,"type":"heading","anchor":"Usage-Example"},{"type":"codeListing","code":["do {","  let (channel, response) = try host.establishChannel(with: counterpartKey)","  \/\/ Send the response back to the counterpart...","","  let secretMessage = \"This is a secret!\"","  let encryptedData = try channel.encrypt(message: secretMessage)","","  \/\/ Send encryptedData over the network...","","  let receivedData: Data = \/\/ ... from counterpart","  let decryptedMessage = try channel.decrypt(encryptedData: receivedData)","","  print(decryptedMessage) \/\/ \"This is a secret from the other side!\"","} catch {","  print(\"Error during secure communication: \\(error)\")","}"],"syntax":"swift"}],"kind":"content"}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/pactkitcore\/pact\/channel"]}],"topicSections":[{"anchor":"Instance-Methods","identifiers":["doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/decrypt(encryptedData:)","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/encrypt(message:)"],"generated":true,"title":"Instance Methods"}],"identifier":{"url":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/PactKitCore\/documentation\/PactKitCore","doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact"]]},"metadata":{"title":"Pact.Channel","extendedModule":"PactKitCore","navigatorTitle":[{"text":"Channel","kind":"identifier"}],"role":"symbol","modules":[{"name":"PactKitCore"}],"externalID":"s:11PactKitCore0A0O7ChannelC","roleHeading":"Class","symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Channel","kind":"identifier"}]},"kind":"symbol","references":{"doc://PactKitCore/documentation/PactKitCore/Pact":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pact"}],"role":"symbol","url":"\/documentation\/pactkitcore\/pact","abstract":[{"type":"text","text":"A namespace for the PactKit framework, providing an entry point for all functionalities."}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Pact"}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact","title":"Pact"},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel/decrypt(encryptedData:)":{"role":"symbol","title":"decrypt(encryptedData:)","kind":"symbol","abstract":[{"text":"Decrypts data encrypted with the session key.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"encryptedData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/decrypt(encryptedData:)","url":"\/documentation\/pactkitcore\/pact\/channel\/decrypt(encrypteddata:)","type":"topic"},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel/encrypt(message:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encrypt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"}],"abstract":[{"type":"text","text":"Encrypts a plaintext string using AES-GCM with the session key."}],"title":"encrypt(message:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel\/encrypt(message:)","type":"topic","url":"\/documentation\/pactkitcore\/pact\/channel\/encrypt(message:)"},"doc://PactKitCore/documentation/PactKitCore/Pact/Channel":{"abstract":[{"type":"text","text":"A secure communication channel established after a successful handshake."}],"title":"Pact.Channel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/pactkitcore\/pact\/channel","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore\/Pact\/Channel","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"role":"symbol","type":"topic"},"doc://PactKitCore/documentation/PactKitCore":{"abstract":[],"title":"PactKitCore","kind":"symbol","role":"collection","identifier":"doc:\/\/PactKitCore\/documentation\/PactKitCore","type":"topic","url":"\/documentation\/pactkitcore"}}}